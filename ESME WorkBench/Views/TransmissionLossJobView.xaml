<Window x:Class="ESMEWorkBench.Views.TransmissionLossJobView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Transmission Loss Parameters"
        xmlns:cinch="clr-namespace:Cinch;assembly=Cinch.WPF"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Width="Auto"
        Height="Auto">
    <Window.Resources>
        <Style x:Key="ValidatingTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0 0 5 0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="LabeledDataWrapperTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="150"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           TextAlignment="Right"
				           Margin="0 0 5 0"
                           VerticalAlignment="Center"
				           Text="{Binding Label}" />
                <TextBox Grid.Column="1"
                         Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding IsReadOnly}"
                         VerticalAlignment="Center"
                         Text="{Binding DataValue, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                    <i:Interaction.Behaviors>
                        <cinch:NumericTextBoxBehaviour/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </Grid>
        </DataTemplate>
    </Window.Resources>
	<DockPanel LastChildFill="True">
        <!--
        <StackPanel Orientation="Vertical"
		            DockPanel.Dock="Top">
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="{Binding Latitude.Label}" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding Latitude.IsReadOnly}"
                         Text="{Binding Latitude.DataValue, StringFormat={}{0:0.000000}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                    <i:Interaction.Behaviors>
                        <cinch:NumericTextBoxBehaviour/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="{Binding Longitude.Label}" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding Longitude.IsReadOnly}"
                         Text="{Binding Longitude.DataValue, StringFormat={}{0:0.000000}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                    <i:Interaction.Behaviors>
                        <cinch:NumericTextBoxBehaviour/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="Field radius (m)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding Radius.IsReadOnly}"
                         Text="{Binding Radius.DataValue, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="First radial bearing (deg)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding Latitude.IsReadOnly}"
                         Text="{Binding RadialBearing.DataValue, StringFormat={}{0:0.#}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="Source depth (m)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding SourceDepth.IsReadOnly}"
                         Text="{Binding SourceDepth.DataValue, StringFormat={}{0:0.#}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="Radial count" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding RadialCount.IsReadOnly}"
                         Text="{Binding RadialCount.DataValue, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="Low Frequency (Hz)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding LowFrequency.IsReadOnly}"
                         Text="{Binding LowFrequency.DataValue, StringFormat={}{0:0.#}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                    <i:Interaction.Behaviors>
                        <cinch:NumericTextBoxBehaviour/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="High Frequency (Hz)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding HighFrequency.IsReadOnly}"
                         Text="{Binding HighFrequency.DataValue, StringFormat={}{0:0.#}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="Vertical Beam Width (deg)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding VerticalBeamWidth.IsReadOnly}"
                         Text="{Binding VerticalBeamWidth.DataValue, StringFormat={}{0:0.#}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <TextBlock Width="200"
				           TextAlignment="Right"
				           Margin="0 0 5 0"
				           Text="Depression/Elevation Angle (deg)" />
                <TextBox Style="{StaticResource ValidatingTextBox}"
                         IsReadOnly="{Binding DepressionElevationAngle.IsReadOnly}"
                         Text="{Binding DepressionElevationAngle.DataValue, StringFormat={}{0:0.#}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
            </DockPanel>
        </StackPanel>
        -->
        <DockPanel LastChildFill="False"
		           DockPanel.Dock="Bottom"
		           Margin="10">
			<Button Content="Cancel"
			        IsCancel="True"
			        Width="100"
			        Margin="10 0 0 0"
			        DockPanel.Dock="Right" />
			<Button Content="OK"
			        Width="100"
			        DockPanel.Dock="Right"
			        Command="{Binding OkCommand}" />
		</DockPanel>
        <ListBox DockPanel.Dock="Top"
                 ItemsSource="{Binding EditableFields}"
                 ItemTemplate="{StaticResource LabeledDataWrapperTemplate}" />
    </DockPanel>
</Window>