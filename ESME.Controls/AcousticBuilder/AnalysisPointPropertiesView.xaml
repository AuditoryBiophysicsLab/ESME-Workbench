<Window x:Class="ESME.Views.AcousticBuilder.AnalysisPointPropertiesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:ESME.Views" 
        xmlns:Controls="clr-namespace:ESME.Views.Controls" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cinch="clr-namespace:Cinch;assembly=Cinch.WPF" 
        Title="Analysis point properties"        
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStyle="ToolWindow">
	<Window.Resources>
		<Style TargetType="ToolTip">
			<Setter Property="ContentTemplate">
				<Setter.Value>
					<DataTemplate>
						<StackPanel>
							<TextBlock Text="{Binding}"
							           Width="200"
							           TextWrapping='Wrap' />
						</StackPanel>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DetailLabelStyle">
			<Setter Property="TextBlock.TextAlignment"
			        Value="Left" />
			<Setter Property="Control.Margin"
			        Value="0 5 0 0" />
		</Style>
        <Style x:Key="DetailValueStyleReadonly" TargetType="Label">
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Background" Value="#EEEEEE" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush" Value="LightGray" />
            <Setter Property="Height" Value="27" />
        </Style>
        <Style x:Key="DetailValueStyleEditable" TargetType="TextBox" BasedOn="{StaticResource ValidatingTextBoxStyle}">
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush" Value="LightGray" />
            <Setter Property="Height" Value="27" />
        </Style>
        <Style x:Key="ModeListItemStyle"
		       TargetType="ListBoxItem">
			<Setter Property="KeyboardNavigation.AcceptsReturn"
			        Value="True" />
			<Setter Property="views:VirtualToggleButton.IsVirtualToggleButton"
			        Value="True" />
			<Setter Property="views:VirtualToggleButton.IsChecked"
			        Value="{Binding ShouldBeCalculated}" />
		</Style>
		<DataTemplate x:Key="CheckBoxItemTemplate">
			<Grid Width="{Binding ElementName=ModeList, Path=Width}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="16" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="10" />
				</Grid.ColumnDefinitions>
				<CheckBox Focusable="False"
				          Grid.Column="0"
				          IsChecked="{Binding ShouldBeCalculated}"
				          VerticalAlignment="Center" />
				<TextBlock x:Name="ModeName"
                           Text="{Binding Name, Mode=OneTime}"
				           Grid.Column="1"
				           Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=Width}" />
			</Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsValid}" Value="False">
                    <DataTrigger.Setters>
                        <Setter TargetName="ModeName" Property="Foreground" Value="Red"/>
                        <Setter TargetName="ModeName" Property="ToolTip" Value="{Binding ValidationErrorText}" />
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Binding="{Binding ShouldBeCalculated}" Value="False">
                    <DataTrigger.Setters>
                        <Setter TargetName="ModeName" Property="ToolTip" Value="This mode will NOT be exported for calculation (unchecked)"/>
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Binding="{Binding ShouldBeCalculated}" Value="True">
                    <DataTrigger.Setters>
                        <Setter TargetName="ModeName" Property="ToolTip" Value="This mode WILL be exported for calculation (checked)"/>
                    </DataTrigger.Setters>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
	</Window.Resources>
	<DockPanel>
		<DockPanel DockPanel.Dock="Bottom"
		           LastChildFill="False"
		           Margin="5 10">
			<Button Width="90"
			        Margin="10 0 0 0"
			        IsCancel="False"
			        Content="Cancel"
			        DockPanel.Dock="Right"
			        Command="{Binding CancelCommand}" />
			<Button Width="90"
			        IsDefault="True"
			        Content="OK"
			        DockPanel.Dock="Right"
			        Command="{Binding OkCommand}" />
		</DockPanel>
        <DockPanel DockPanel.Dock="Left" LastChildFill="True">
            <GroupBox Header="Analysis point location"
                      Margin="5"
                      Padding="5"
                      DockPanel.Dock="Top">
                <DockPanel LastChildFill="False">
                    <StackPanel Orientation="Vertical" DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                        <TextBlock Style="{StaticResource DetailLabelStyle}"
						           Text="Latitude"
						           ToolTip="The name of the selected mode" />
                        <Controls:ValidatingTextBox Style="{StaticResource DetailValueStyleEditable}"
						                            BoundField="Latitude" />

                    </StackPanel>
                    <StackPanel Orientation="Vertical" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
                        <TextBlock Style="{StaticResource DetailLabelStyle}"
						           Text="Longitude"
						           ToolTip="The name of the selected mode" />
                        <Controls:ValidatingTextBox Style="{StaticResource DetailValueStyleEditable}"
						                            BoundField="Longitude" />

                    </StackPanel>
                </DockPanel>
            </GroupBox>
            <GroupBox DockPanel.Dock="Top"
                      Margin="5 0 5 5"
                      Padding="5"
		              Header="Available Modes">
			    <ListBox x:Name="ModeList" 
                         Control.BorderThickness ="0"
                         ItemsSource="{Binding AvailableModes}"
			             SelectedItem="{Binding SelectedMode}"
			             ItemContainerStyle="{StaticResource ModeListItemStyle}"
			             ToolTip="Checked modes will be calculated along with the rest of this analysis point, and will be usable in a subsequent scenario simulation.  Unchecked modes will not be calculated, and will not be used in simulations."
			             ItemTemplate="{StaticResource CheckBoxItemTemplate}">
			    </ListBox>
		    </GroupBox>
        </DockPanel>
		<GroupBox DockPanel.Dock="Right"
				    Margin="5"
                    Padding="5"
                    MinWidth="400"
				    Header="Details">
			<StackPanel Orientation="Vertical"
					    Grid.Column="0"
					    HorizontalAlignment="Stretch">
                <TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="Name"
						    ToolTip="The name of the selected mode" />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.Name}" />
                <TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="Radials (deg)"
						    ToolTip="The name of the selected mode" />
                <DockPanel LastChildFill="True">
                    <!-- The intent for the visibility binding here is that if ANY of the radial lists in ANY mode in the current analysis point
                            is different, the button should become visble.  Perhaps it should simply enable/disable as normal but doing it this way
                            may be cooler ;) -->
                    <Button DockPanel.Dock="Right" 
                            Margin="5 0 0 0"
                            Content="Apply to all" 
                            Command="{Binding ApplyToAllModesCommand}"
                            ToolTip="Apply this radial configuration to all modes in this analysis point" />
                    <Controls:ValidatingTextBox Style="{StaticResource DetailValueStyleEditable}" IsEnabled="{Binding IsItemSelected}"
                                            BoundField="SelectedMode.BearingsString">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <cinch:EventToCommandTrigger Command="{Binding RadialsLostFocusCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        
                    </Controls:ValidatingTextBox>
                </DockPanel>
                <TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="Source Depth (m)"
						    ToolTip="Source depth, in meters, of the selected mode" />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.AcousticProperties.SourceDepth}" />
				<TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="High Frequency (Hz)"
						    ToolTip="High frequency, in hertz, of the selected mode" />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.AcousticProperties.HighFrequency, StringFormat={}{0:N3}}" />
				<TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="Low Frequency (Hz)"
						    ToolTip="Low frequency, in hertz, of the selected mode" />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.AcousticProperties.LowFrequency, StringFormat={}{0:N3}}" />
				<TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="Vertical beam width (deg)"
						    ToolTip="Vertical beam width, in degrees, of the selected mode" />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.AcousticProperties.VerticalBeamWidth}" />
				<TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="D/E angle (deg)"
						    ToolTip="Depression/elevation angle, in degrees, of the selected mode.  Positive values mean that the source is aimed toward the bottom" />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.AcousticProperties.DepressionElevationAngle}" />
				<TextBlock Style="{StaticResource DetailLabelStyle}"
						    Text="Radius (m)"
						    ToolTip="Radius, in meters, of the selected mode.  This value is the maximum distance from the source for which a transmission loss will be calculated.  All receivers further away from the source are presumed by the model to not be exposed to this source." />
                <Label Style="{StaticResource DetailValueStyleReadonly}"
						Content="{Binding SelectedMode.Radius, StringFormat={}{0:N1}}" />
			</StackPanel>
		</GroupBox>
    </DockPanel>
</Window>