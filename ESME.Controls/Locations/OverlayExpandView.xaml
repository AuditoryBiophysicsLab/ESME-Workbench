<Window x:Class="ESME.Views.Locations.OverlayExpandView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:cinch="clr-namespace:Cinch;assembly=Cinch.WPF" 
        xmlns:c="clr-namespace:ESME.Views.Locations" 
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase" 
        mc:Ignorable="d"        
        Title="Expand Overlay File"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        SnapsToDevicePixels="True"
        WindowStyle="ToolWindow">
    <Window.Resources>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" 
                         Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Background" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ValidatingTextBox" TargetType="{x:Type TextBoxBase}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border"
                                Padding="2"
                                Background="White"
                                BorderBrush="Black"
                                BorderThickness="1" >
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate DataType="{x:Type ValidationError}">
            <TextBlock Foreground="Red" Text="{Binding ErrorContent}" />
        </DataTemplate>
    </Window.Resources>
    <StackPanel>
        <StackPanel Orientation="Vertical">
            <!--
            <TextBlock Text="Expand Limits by (km) "/>
            <TextBox x:Name="Binding" Validation.ErrorTemplate="{StaticResource validationTemplate}"
                     Style="{StaticResource textBoxInError}" >
                <TextBox.Text>
                    <Binding Path="Buffer" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <c:ValidRangeRule Minimum="0"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            -->
            <TextBlock Text="Expand Limits by (km) "/>
            <TextBox x:Name="DataValue" Text="{Binding BufferSize.DataValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                     Style="{StaticResource ValidatingTextBox}"
                     IsEnabled="{Binding BufferSize.IsEditable}">
                <i:Interaction.Behaviors>
                    <cinch:NumericTextBoxBehaviour/>
                </i:Interaction.Behaviors>
            </TextBox>
            <ContentPresenter Content="{Binding ElementName=DataValue, Path=(ValidationErrors).CurrentItem}" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="OK" Width="75" Margin="5" IsDefault="True" Command="{Binding OKCommand}"/>
            <Button Content="Cancel" Width="75" Margin="5" IsCancel="True"/>
        </StackPanel>
    </StackPanel>
</Window>
