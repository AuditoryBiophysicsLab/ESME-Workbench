<Window x:Class="DavesWPFTester.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mef="http:\\www.codeplex.com\MEFedMVVM"
        mef:ViewModelLocator.ViewModel="MainWindowViewModel" SnapsToDevicePixels="True" Title="Dave's WPF Test Application"
        Height="600" Width="600" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:app="clr-namespace:DavesWPFTester"
        xmlns:EnvironmentBuilder="clr-namespace:ESME.Views.EnvironmentBuilder;assembly=ESME.Views"
        xmlns:ESME="clr-namespace:ESME;assembly=ESME" xmlns:NAVO="clr-namespace:ESME.Environment.NAVO;assembly=ESME"
        xmlns:Descriptors="clr-namespace:ESME.Environment.Descriptors;assembly=ESME" mc:Ignorable="d"
        d:DataContext="{d:DesignInstance app:MainWindowViewModel}">
  <Window.Resources>
    <EnvironmentBuilder:CollectionViewSortConverter x:Key="SortConverter" />
    <Style x:Key="DataAvailabilityStyle" TargetType="TextBlock">
      <Style.Triggers>
        <DataTrigger Binding="{Binding}" Value="NotLoaded">
          <Setter Property="Foreground" Value="Black" />
        </DataTrigger>
        <DataTrigger Binding="{Binding}" Value="Loading">
          <Setter Property="Foreground" Value="Orange" />
        </DataTrigger>
        <DataTrigger Binding="{Binding}" Value="Available">
          <Setter Property="Foreground" Value="Green" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="200" />
    </Grid.ColumnDefinitions>
    <StackPanel Orientation="Vertical" Grid.Column="1">
      <GroupBox Header="Range Complexes" DockPanel.Dock="Bottom" Margin="5">
        <StackPanel Orientation="Vertical" Margin="5">
          <Button Content="Add test range complex" Command="{Binding CreateTestRangeComplexCommand}" />
          <Button Content="Remove test range complex" Command="{Binding RemoveTestRangeComplexCommand}" />
          <Button Content="Add 50 range complexes" Command="{Binding CreateManyRangeComplexesCommand}" />
          <Button Content="Delete 50 range complexes" Command="{Binding DeleteManyRangeComplexesCommand}" />
        </StackPanel>
      </GroupBox>
      <GroupBox Header="Areas" DockPanel.Dock="Bottom" Margin="5">
        <StackPanel Orientation="Vertical" Margin="5">
          <Button Content="Add test area" Command="{Binding CreateTestAreaCommand}" />
          <Button Content="Remove test area" Command="{Binding RemoveTestAreaCommand}" />
          <Button Content="Add 50 test areas" Command="{Binding CreateManyAreasCommand}" />
          <Button Content="Remove 50 test areas" Command="{Binding RemoveManyAreasCommand}" />
          <Button Content="Dump test area" Command="{Binding DumpTestAreaCommand}" />
        </StackPanel>
      </GroupBox>
      <GroupBox Header="Data" DockPanel.Dock="Bottom" Margin="5">
        <StackPanel Orientation="Vertical" Margin="5">
          <Button Content="Import test bathymetry" Command="{Binding ImportTestBathymetryCommand}" />
          <Button Content="Remove test bathymetry" Command="{Binding RemoveTestBathymetryCommand}" />
          <Button Content="Load test bathymetry" Command="{Binding LoadTestBathymetryCommand}" />
          <Button Content="Clear test bathymetry" Command="{Binding ClearTestBathymetryCommand}" />
          <Button Content="Load test temperature" Command="{Binding LoadTestTemperatureCommand}" />
          <Button Content="Load test salinity" Command="{Binding LoadTestSalinityCommand}" />
          <Button Content="Load test soundspeed" Command="{Binding LoadTestSoundspeedCommand}" />
          <Button Content="Load test bottomloss" Command="{Binding LoadTestBottomLossCommand}" />
          <Button Content="Load test sediment" Command="{Binding LoadTestSedimentCommand}" />
          <Button Content="Load test wind" Command="{Binding LoadTestWindCommand}" />
        </StackPanel>
      </GroupBox>
    </StackPanel>
    <DockPanel LastChildFill="True" Grid.Column="0">
      <GroupBox Header="Import status" Margin="5" DockPanel.Dock="Bottom">
        <EnvironmentBuilder:ImportProgressListView ItemsSource="{Binding ImportProgressCollection}" />
      </GroupBox>
      <GroupBox Margin="5" DockPanel.Dock="Bottom">
        <GroupBox.Header>
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Selected Range Complex: " />
            <ComboBox ItemsSource="{Binding RangeComplexes.RangeComplexList}"
                      SelectedItem="{Binding RangeComplexes.SelectedRangeComplex}" DisplayMemberPath="Name" />
          </StackPanel>
        </GroupBox.Header>
                <UniformGrid Rows="2">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Time Period" />
                        <ComboBox ItemsSource="{x:Static NAVO:NAVOConfiguration.AllTimePeriods}"
                      SelectedItem="{Binding RangeComplexes.SelectedTimePeriod}" />
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Area" />
                        <ComboBox ItemsSource="{Binding RangeComplexes.SelectedRangeComplex.AreaList}"
                      SelectedItem="{Binding RangeComplexes.SelectedArea}" DisplayMemberPath="Name" />
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Bathymetry" />
                        <ComboBox ItemsSource="{Binding RangeComplexes.SelectedArea.BathymetryList}"
                      SelectedItem="{Binding RangeComplexes.SelectedBathymetry}" DisplayMemberPath="Name" />
                    </StackPanel>
                    <Button Content="Load!" IsEnabled="{Binding RangeComplexes.IsEnvironmentFullySpecified}"
                  Command="{Binding LoadEnvironmentCommand}" />
                    <Button Content="Clear!" IsEnabled="{Binding RangeComplexes.IsEnvironmentFullySpecified}"
                  Command="{Binding ClearEnvironmentCommand}" />
                </UniformGrid>
            </GroupBox>
      <GroupBox Header="Selected data status" Margin="5" DockPanel.Dock="Bottom">
        <UniformGrid Rows="1">
          <StackPanel Orientation="Vertical" DataContext="{Binding RangeComplexes.SelectedSediment.DataAvailability}">
            <TextBlock Text="Sediment" TextAlignment="Center" />
            <TextBlock Text="{Binding}" TextAlignment="Center" Style="{StaticResource DataAvailabilityStyle}" />
          </StackPanel>
          <StackPanel Orientation="Vertical" DataContext="{Binding RangeComplexes.SelectedBathymetry.DataAvailability}">
            <TextBlock Text="Bathymetry" TextAlignment="Center" />
            <TextBlock Text="{Binding}" TextAlignment="Center" Style="{StaticResource DataAvailabilityStyle}" />
          </StackPanel>
          <StackPanel Orientation="Vertical" DataContext="{Binding RangeComplexes.SelectedBottomLoss.DataAvailability}">
            <TextBlock Text="Bottom Loss" TextAlignment="Center" />
            <TextBlock Text="{Binding}" TextAlignment="Center" Style="{StaticResource DataAvailabilityStyle}" />
          </StackPanel>
          <StackPanel Orientation="Vertical" DataContext="{Binding RangeComplexes.SelectedSoundSpeed.DataAvailability}">
            <TextBlock Text="Sound Speed" TextAlignment="Center" />
            <TextBlock Text="{Binding}" TextAlignment="Center" Style="{StaticResource DataAvailabilityStyle}" />
          </StackPanel>
          <StackPanel Orientation="Vertical" DataContext="{Binding RangeComplexes.SelectedWind.DataAvailability}">
            <TextBlock Text="Wind" TextAlignment="Center" />
            <TextBlock Text="{Binding}" TextAlignment="Center" Style="{StaticResource DataAvailabilityStyle}" />
          </StackPanel>
        </UniformGrid>
      </GroupBox>

      <GroupBox Header="Range Complexes" Margin="5" DockPanel.Dock="Top" HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
        <EnvironmentBuilder:RangeComplexTreeView DockPanel.Dock="Top" DataContext="{Binding RangeComplexes}"
                                                  IsEnabled="{Binding IsEnabled}"
                                                  ItemsSource="{Binding RangeComplexList, Converter={StaticResource SortConverter}, ConverterParameter='Name'}" />
      </GroupBox>
    </DockPanel>
  </Grid>
</Window>