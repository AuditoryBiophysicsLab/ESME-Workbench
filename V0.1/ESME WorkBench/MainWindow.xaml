<ribbon:RibbonWindow x:Class="ESMERibbonDemo.MainWindow"
					 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					 xmlns:ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
					 xmlns:uc1="clr-namespace:ThinkGeo.MapSuite.WpfDesktopEdition;assembly=WpfDesktopEdition"
					 xmlns:mef="http:\\www.codeplex.com\MEFedMVVM"
					 xmlns:rvm="clr-namespace:ESMERibbonDemo.ViewModels.Ribbon"
					 xmlns:lvm="clr-namespace:ESMERibbonDemo.ViewModels.Layers" 
					 xmlns:mvm="clr-namespace:ESMERibbonDemo.ViewModels.Main" 
					 mef:ViewModelLocator.ViewModel="MainViewModel"
					 SnapsToDevicePixels="True"
					 Title="ESME WorkBench"
					 x:Name="MainView"
					 Width="1000" Height="668">
	<ribbon:RibbonWindow.Resources>
		<!-- RibbonControl -->
		<Style x:Key="RibbonControlStyle">
			<Setter Property="ribbon:RibbonControlService.Label" Value="{Binding Label}" />
			<Setter Property="ribbon:RibbonControlService.LargeImageSource" Value="{Binding LargeImage}" />
			<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{Binding SmallImage}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipTitle" Value="{Binding ToolTipTitle}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipDescription" Value="{Binding ToolTipDescription}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{Binding ToolTipImage}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipFooterTitle" Value="{Binding ToolTipFooterTitle}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipFooterDescription" Value="{Binding ToolTipFooterDescription}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{Binding ToolTipFooterImage}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding LargeImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.LargeImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding SmallImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding ToolTipImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding ToolTipFooterImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{x:Null}" />
				</DataTrigger>
				<Trigger Property="ribbon:RibbonControlService.IsInQuickAccessToolBar" Value="False">
					<Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- RibbonGroup -->
		<Style TargetType="{x:Type ribbon:RibbonGroup}"  BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="QuickAccessToolBarId" Value="{Binding Label}" />
			<Setter Property="Header" Value="{Binding Label}" />
		</Style>

		<!-- RibbonButton -->
		<Style TargetType="{x:Type ribbon:RibbonButton}" BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="Command" Value="{Binding Command}" />
		</Style>

		<!-- RibbonToggleButton -->
		<Style TargetType="{x:Type ribbon:RibbonToggleButton}" BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="IsChecked" Value="{Binding IsChecked}" />
		</Style>

		<!-- RibbonRadioButton -->
		<Style TargetType="{x:Type ribbon:RibbonRadioButton}" BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="IsChecked" Value="{Binding IsChecked}" />
		</Style>

		<!-- RibbonCheckBox -->
		<Style TargetType="{x:Type ribbon:RibbonCheckBox}" BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="IsChecked" Value="{Binding IsChecked}" />
		</Style>

		<!-- RibbonTextBox -->
		<Style TargetType="{x:Type ribbon:RibbonTextBox}" BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="Text" Value="{Binding Text}" />
		</Style>

		<!-- RibbonMenuButton -->
		<Style TargetType="{x:Type ribbon:RibbonMenuButton}" BasedOn="{StaticResource RibbonControlStyle}">
			<Setter Property="QuickAccessToolBarId" Value="{Binding Command}" />
			<Setter Property="CanUserResizeVertically" Value="{Binding IsVerticallyResizable}" />
			<Setter Property="CanUserResizeHorizontally" Value="{Binding IsHorizontallyResizable}" />
		</Style>

		<!-- RibbonSplitButton -->
		<Style TargetType="{x:Type ribbon:RibbonSplitButton}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuButton}}">
			<Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
			<Setter Property="IsChecked" Value="{Binding IsChecked}" />
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="HeaderQuickAccessToolBarId" Value="{Binding Label}" />
			<Setter Property="DropDownToolTipTitle" Value="{Binding DropDownButtonData.ToolTipTitle}" />
			<Setter Property="DropDownToolTipDescription" Value="{Binding DropDownButtonData.ToolTipDescription}" />
			<Setter Property="DropDownToolTipImageSource" Value="{Binding DropDownButtonData.ToolTipImage}" />
			<Setter Property="DropDownToolTipFooterTitle" Value="{Binding DropDownButtonData.ToolTipFooterTitle}" />
			<Setter Property="DropDownToolTipFooterDescription" Value="{Binding DropDownButtonData.ToolTipFooterDescription}" />
			<Setter Property="DropDownToolTipFooterImageSource" Value="{Binding DropDownButtonData.ToolTipFooterImage}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding DropDownButtonData.ToolTipImage}" Value="{x:Null}">
					<Setter Property="DropDownToolTipImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding DropDownButtonData.ToolTipFooterImage}" Value="{x:Null}">
					<Setter Property="DropDownToolTipFooterImageSource" Value="{x:Null}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- RibbonComboBox -->
		<Style TargetType="{x:Type ribbon:RibbonComboBox}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuButton}}">
			<Setter Property="IsEditable" Value="True" />
			<Setter Property="CanUserResizeVertically" Value="True" />
		</Style>

		<!-- RibbonGallery FilterItemContainerStyle -->
		<Style TargetType="{x:Type ribbon:RibbonMenuItem}" x:Key="FilterMenuItemStyle">
			<Setter Property="Header" Value="{Binding Label}"/>
		</Style>

		<!-- RibbonGallery -->
		<Style TargetType="{x:Type ribbon:RibbonGallery}">
			<Style.Resources>
				<!-- Note that this Style has been specified only to trump the 
						 implicit style for RibbonMenuItem from being picked by the 
						 items within the FilterMenuButton -->
				<Style TargetType="{x:Type ribbon:RibbonMenuItem}" />
			</Style.Resources>
			<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{Binding SmallImage}" />
			<Setter Property="ItemsSource" Value="{Binding CategoryDataCollection}" />
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="SelectedItem" Value="{Binding SelectedItem}" />
			<Setter Property="CanUserFilter" Value="{Binding CanUserFilter}" />
			<Setter Property="FilterItemContainerStyle" Value="{StaticResource FilterMenuItemStyle}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding SmallImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.SmallImageSource" Value="{x:Null}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- RibbonGalleryCategory -->
		<Style TargetType="{x:Type ribbon:RibbonGalleryCategory}">
			<Setter Property="Header" Value="{Binding Label}" />
			<Setter Property="ItemsSource" Value="{Binding GalleryItemDataCollection}" />
		</Style>

		<!-- RibbonMenuItem -->
		<Style TargetType="{x:Type ribbon:RibbonMenuItem}">
			<Setter Property="Header" Value="{Binding Label}" />
			<Setter Property="ImageSource" Value="{Binding SmallImage}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipTitle" Value="{Binding ToolTipTitle}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipDescription" Value="{Binding ToolTipDescription}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{Binding ToolTipImage}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipFooterTitle" Value="{Binding ToolTipFooterTitle}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipFooterDescription" Value="{Binding ToolTipFooterDescription}" />
			<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{Binding ToolTipFooterImage}" />
			<Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
			<Setter Property="Command" Value="{Binding Command}" />
			<Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
			<Setter Property="IsChecked" Value="{Binding IsChecked}" />
			<Setter Property="CanUserResizeVertically" Value="{Binding IsVerticallyResizable}" />
			<Setter Property="CanUserResizeHorizontally" Value="{Binding IsHorizontallyResizable}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding SmallImage}" Value="{x:Null}">
					<Setter Property="ImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding ToolTipImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.ToolTipImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding ToolTipFooterImage}" Value="{x:Null}">
					<Setter Property="ribbon:RibbonControlService.ToolTipFooterImageSource" Value="{x:Null}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- RibbonSplitMenuItem -->
		<Style TargetType="{x:Type ribbon:RibbonSplitMenuItem}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuItem}}">
			<Setter Property="HeaderQuickAccessToolBarId" Value="{Binding Command}" />
			<Setter Property="QuickAccessToolBarId" Value="{Binding DropDownButtonData.Command}" />
			<Setter Property="HeaderKeyTip" Value="{Binding KeyTip}" />
			<Setter Property="KeyTip" Value="{Binding DropDownButtonData.KeyTip}" />
			<Setter Property="DropDownToolTipTitle" Value="{Binding DropDownButtonData.ToolTipTitle}" />
			<Setter Property="DropDownToolTipDescription" Value="{Binding DropDownButtonData.ToolTipDescription}" />
			<Setter Property="DropDownToolTipImageSource" Value="{Binding DropDownButtonData.ToolTipImage}" />
			<Setter Property="DropDownToolTipFooterTitle" Value="{Binding DropDownButtonData.ToolTipFooterTitle}" />
			<Setter Property="DropDownToolTipFooterDescription" Value="{Binding DropDownButtonData.ToolTipFooterDescription}" />
			<Setter Property="DropDownToolTipFooterImageSource" Value="{Binding DropDownButtonData.ToolTipFooterImage}" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding DropDownButtonData.ToolTipImage}" Value="{x:Null}">
					<Setter Property="DropDownToolTipImageSource" Value="{x:Null}" />
				</DataTrigger>
				<DataTrigger Binding="{Binding DropDownButtonData.ToolTipFooterImage}" Value="{x:Null}">
					<Setter Property="DropDownToolTipFooterImageSource" Value="{x:Null}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- RibbonApplicationMenuItem -->
		<Style TargetType="{x:Type ribbon:RibbonApplicationMenuItem}" BasedOn="{StaticResource {x:Type ribbon:RibbonMenuItem}}">
			<Style.Triggers>
				<Trigger Property="Level" Value="Middle">
					<Setter Property="ImageSource" Value="{Binding SmallImage}" />
					<Setter Property="KeyTipService.KeyTip" Value="{Binding KeyTip}" />
					<Setter Property="Command" Value="{Binding Command}" />
					<Setter Property="Header" Value="{Binding}" />
					<Setter Property="HeaderTemplate">
						<Setter.Value>
							<DataTemplate>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<AccessText Grid.Row="0" FontWeight="Bold" Text="{Binding Label}" />
									<TextBlock Grid.Row="1" Text="{Binding ToolTipTitle}" TextWrapping="Wrap" />
								</Grid>
							</DataTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- RibbonApplicationSplitMenuItem -->
		<Style TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}" BasedOn="{StaticResource {x:Type ribbon:RibbonSplitMenuItem}}" />

		<!-- RibbonContextMenu -->
		<Style TargetType="{x:Type ribbon:RibbonContextMenu}">
			<Style.Resources>
				<!-- Note that this Style has been specified only to trump the 
						 implicit style for RibbonMenuItem from being picked by the 
						 items within the ContextMenu -->
				<Style TargetType="{x:Type ribbon:RibbonMenuItem}" />
			</Style.Resources>
		</Style>

		<!-- RibbonControlGroup -->
		<Style TargetType="{x:Type ribbon:RibbonControlGroup}">
			<Setter Property="Margin" Value="2,0,2,0" />
		</Style>

		<BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		<!-- RibbonContextualTabGroup -->
		<Style TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
			<Setter Property="Header" Value="{Binding Header}" />
			<Setter Property="Visibility" Value="{Binding IsVisible,Converter={StaticResource BoolToVisibilityConverter}}" />
		</Style>

		<!-- RibbonTab -->
		<Style TargetType="{x:Type ribbon:RibbonTab}" x:Key="ContextualTabStyle">
			<Setter Property="ContextualTabGroupHeader" Value="{Binding ContextualTabGroupHeader}" />
			<Setter Property="Header" Value="{Binding Header}" />
			<Setter Property="IsSelected" Value="{Binding IsSelected}" />
		</Style>

	</ribbon:RibbonWindow.Resources>
	<DockPanel LastChildFill="True">
		<ribbon:Ribbon x:Name="Ribbon" SelectedIndex="0" DockPanel.Dock="Top">
			<ribbon:Ribbon.ApplicationMenu>
				<ribbon:RibbonApplicationMenu SmallImageSource="Images\SmallIcons\Dolphin.png">
					<ribbon:RibbonApplicationMenuItem Header="Save Experiment"
													  CanAddToQuickAccessToolBarDirectly="True"
													  Icon="Images\SmallIcons\save-icon.png"
													  ImageSource="Images\LargeIcons\save-icon.png"/>
					<ribbon:RibbonApplicationMenuItem Header="Open Experiment"
													  CanAddToQuickAccessToolBarDirectly="True"
													  Icon="Images\SmallIcons\open-icon.png"
													  ImageSource="Images\LargeIcons\open-icon.png"/>
					<ribbon:RibbonApplicationMenuItem Header="Close Experiment"
													  CanAddToQuickAccessToolBarDirectly="True"
													  Icon="Images\SmallIcons\close-icon.png"
													  ImageSource="Images\LargeIcons\close-icon.png"/>
					<ribbon:RibbonApplicationMenuItem Header="New Experiment"
													  CanAddToQuickAccessToolBarDirectly="True"
													  Icon="Images\SmallIcons\new-icon.png"
													  ImageSource="Images\LargeIcons\new-icon.png"/>
					<ribbon:RibbonApplicationSplitMenuItem Header="Info"
														   CanAddToQuickAccessToolBarDirectly="True"
														   Icon="Images\SmallIcons\about-icon.png"
														   ImageSource="Images\LargeIcons\about-icon.png"/>
				</ribbon:RibbonApplicationMenu>
			</ribbon:Ribbon.ApplicationMenu>
			<ribbon:RibbonTab DataContext="{Binding Path=Tabs[Experiment]}" KeyTip="E" Header="Experiment">
				<ribbon:RibbonGroup DataContext="{Binding Path=Groups[Scenario]}">
                    <ribbon:RibbonButton DataContext="{Binding Path=Controls[Load]}"/>
                    <ribbon:RibbonButton DataContext="{Binding Path=Controls[Edit]}"/>
				</ribbon:RibbonGroup>
                <ribbon:RibbonGroup DataContext="{Binding Path=Groups[Map]}">
                    <ribbon:RibbonMenuButton DataContext="{Binding Path=Controls[Base Map]}">
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[NASA 1 minute topographic map]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[Custom base map]}"/>
					</ribbon:RibbonMenuButton>
                    <ribbon:RibbonMenuButton DataContext="{Binding Path=Controls[Add Content]}">
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[ESRI Shapefile (*.shp)]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[NUWC Overlay File (*.ovr)]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[NUWC Scenario File (*.nemo)]}"/>
                    </ribbon:RibbonMenuButton>
                    <ribbon:RibbonMenuButton DataContext="{Binding Path=Controls[Pan/Zoom Control]}">
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[Visible]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[Upper Left]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[Upper Right]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[Lower Left]}"/>
                        <ribbon:RibbonMenuItem DataContext="{Binding Path=MenuItems[Lower Right]}"/>
                    </ribbon:RibbonMenuButton>
				</ribbon:RibbonGroup>
				<ribbon:RibbonGroup Header="Sounds">
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\bullet-2-icon.png"
						SmallImageSource="Images\SmallIcons\bullet-2-icon.png"
						Label="Analysis Point" />
					<ribbon:RibbonButton SmallImageSource="Images\SmallIcons\Sound.png"
						Label="Fixed Source" />
					<ribbon:RibbonButton SmallImageSource="Images\SmallIcons\Button-Play-icon.png"
						Label="Quick Look" 
						ToolTip="Run the acoustic simulator to compute transmission loss field"/>
				</ribbon:RibbonGroup>
			</ribbon:RibbonTab>
			<ribbon:RibbonTab Header="Scenario">
				<ribbon:RibbonGroup Header="Scenario File">
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\open-icon.png"
										 SmallImageSource="Images\SmallIcons\open-icon.png"
										 Label="Open" />
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\close-icon.png"
										 SmallImageSource="Images\SmallIcons\close-icon.png"
										 Label="Close" />
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\AddFile.png"
										 SmallImageSource="Images\SmallIcons\AddFile.png"
										 Label="Edit" />
				</ribbon:RibbonGroup>
			</ribbon:RibbonTab>
			<ribbon:RibbonTab Header="Environment">
				<ribbon:RibbonGroup Header="Location">
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\open-icon.png"
										 SmallImageSource="Images\SmallIcons\open-icon.png"
										 Label="Open" />
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\AddFile.png"
										 SmallImageSource="Images\SmallIcons\AddFile.png"
										 Label="Edit" />
				</ribbon:RibbonGroup>
				<ribbon:RibbonGroup Header="Layers">
					<ribbon:RibbonComboBox Label="Select Layer" />
					<ribbon:RibbonButton SmallImageSource="Images\SmallIcons\open-icon.png"
										 Label="Properties" />
				</ribbon:RibbonGroup>
			</ribbon:RibbonTab>
			<ribbon:RibbonTab Header="Animals">
				<ribbon:RibbonGroup Header="Species">
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\Dolphin.png"
						SmallImageSource="Images\SmallIcons\Dolphin.png"
						Label="Add Species" />
					<ribbon:RibbonButton ToolTip="Previous" 
										 SmallImageSource="Images\SmallIcons\Button-Previous-icon.png"/>
					<ribbon:RibbonButton ToolTip="Next" 
										 SmallImageSource="Images\SmallIcons\Button-Next-icon.png"/>
					<ribbon:RibbonButton ToolTip="Delete"
										 SmallImageSource="Images\SmallIcons\Button-Delete-icon.png"/>
					<ribbon:RibbonButton ToolTip="Filter"
										 SmallImageSource="Images\SmallIcons\SmallIcon.png"/>
				</ribbon:RibbonGroup>
				<ribbon:RibbonGroup Header="Individual Animals">
					<ribbon:RibbonButton LargeImageSource="Images\LargeIcons\Dolphin.png"
						SmallImageSource="Images\SmallIcons\Dolphin.png"
						Label="Add Animal" />
					<ribbon:RibbonButton ToolTip="Previous" 
										 SmallImageSource="Images\SmallIcons\Button-Previous-icon.png"/>
					<ribbon:RibbonButton ToolTip="Next" 
										 SmallImageSource="Images\SmallIcons\Button-Next-icon.png"/>
					<ribbon:RibbonButton ToolTip="Delete"
										 SmallImageSource="Images\SmallIcons\Button-Delete-icon.png"/>
					<ribbon:RibbonButton ToolTip="Filter"
										 SmallImageSource="Images\SmallIcons\SmallIcon.png"/>
				</ribbon:RibbonGroup>
				<ribbon:RibbonGroup Header="Simulator">
					<ribbon:RibbonButton SmallImageSource="Images\SmallIcons\Button-Play-icon.png"
						LargeImageSource="Images\LargeIcons\Button-Play-icon.png"
						Label="Run Simulator" />
				</ribbon:RibbonGroup>
			</ribbon:RibbonTab>
			<ribbon:RibbonTab Header="Acoustics">
				<ribbon:RibbonGroup Header="Simulator">
					<ribbon:RibbonButton SmallImageSource="Images\SmallIcons\Button-Play-icon.png"
						LargeImageSource="Images\LargeIcons\Button-Play-icon.png"
						Label="Run Simulator" 
						ToolTip="Run the acoustic simulator to compute transmission loss field"/>
				</ribbon:RibbonGroup>
				<ribbon:RibbonGroup Header="Analysis Points">
					<ribbon:RibbonButton Label="Add" />
					<ribbon:RibbonButton Label="Properties" />
					<ribbon:RibbonButton Label="Previous" />
					<ribbon:RibbonButton Label="Next" />
					<ribbon:RibbonButton Label="Delete" />
					<ribbon:RibbonButton Label="Filter" />
				</ribbon:RibbonGroup>
				<ribbon:RibbonGroup Header="Modes">
					<ribbon:RibbonButton Label="Add" />
					<ribbon:RibbonButton Label="Properties" />
					<ribbon:RibbonButton Label="Previous" />
					<ribbon:RibbonButton Label="Next " />
					<ribbon:RibbonButton Label="Delete" />
					<ribbon:RibbonButton Label="Vertical Plot" />
					<ribbon:RibbonButton Label="Horizontal Plot" />

				</ribbon:RibbonGroup>
			</ribbon:RibbonTab>
			<ribbon:RibbonTab Header="Reports"/>
		</ribbon:Ribbon>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" MinWidth="100" />
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*" MinWidth="500"/>
			</Grid.ColumnDefinitions>
			<TreeView Name="LayersView" Grid.Column="0">
				<TreeView.Resources>
					<HierarchicalDataTemplate DataType="{x:Type lvm:LayersViewModel}" 
											  ItemsSource="{Binding Layers}">
						<TextBlock Text="{Binding LayerName}" />
					</HierarchicalDataTemplate>
				</TreeView.Resources>
				
			</TreeView>
			<GridSplitter Name="GridSplitter" 
						  Grid.Column="1"
						  Width="2"
						  HorizontalAlignment="Center"
						  Margin="0,5,0,5"
						  VerticalAlignment="Stretch"
						  ResizeBehavior="BasedOnAlignment"
						  ResizeDirection="Columns"/>
			<uc1:WpfMap Name="Map1" Grid.Column="2" />
		</Grid>
	</DockPanel>
</ribbon:RibbonWindow>
