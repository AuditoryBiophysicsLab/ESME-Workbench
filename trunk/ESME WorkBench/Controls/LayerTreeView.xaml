<UserControl x:Class="ESMEWorkBench.Controls.LayerTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mef="http:\\www.codeplex.com\MEFedMVVM"
             xmlns:views="clr-namespace:ESME.Views;assembly=ESME.Views" 
             xmlns:Collections="clr-namespace:HRC.Collections;assembly=HRC" 
             xmlns:Mapping="clr-namespace:ESME.Mapping;assembly=ESME" xmlns:WPF="clr-namespace:HRC.WPF;assembly=HRC" mef:ViewModelLocator.ViewModel="LayerListViewModel"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">
	<UserControl.Resources>
        <Style x:Key="HeaderedToolTip" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HeaderedContentControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border HorizontalAlignment="Stretch" 
                                    BorderThickness="0 0 0 1"
                                    BorderBrush="Black"
                                    Margin="5"
                                    Grid.Row="0">
                                <ContentPresenter ContentSource="{TemplateBinding Header}" />
                            </Border>
                            <ContentPresenter Grid.Row="1" ContentSource="{TemplateBinding Content}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style x:Key="ContextMenuItemStyle">
			<Setter Property="MenuItem.Header"
			        Value="{Binding Header}" />
			<Setter Property="MenuItem.ItemsSource"
			        Value="{Binding Children}" />
			<Setter Property="MenuItem.Command"
			        Value="{Binding Command}" />
			<Setter Property="MenuItem.Icon"
			        Value="{Binding Icon}" />
			<Setter Property="MenuItem.IsCheckable"
			        Value="{Binding IsCheckable}" />
            <Setter Property="MenuItem.IsChecked"
			        Value="{Binding IsChecked}" />
            <Setter Property="MenuItem.Visibility"
			        Value="{Binding Visibility}" />
            <Setter Property="MenuItem.CommandParameter"
			        Value="{Binding}" />
		</Style>

		<Style x:Key="LayersViewItemStyle"
		       TargetType="TreeViewItem">
			<Setter Property="KeyboardNavigation.AcceptsReturn"
			        Value="True" />
			<Setter Property="views:VirtualToggleButton.IsVirtualToggleButton"
			        Value="True" />
			<Setter Property="views:VirtualToggleButton.IsChecked"
			        Value="{Binding IsChecked}" />
            <Setter Property="ToolTip" Value="{Binding ToolTip}" />
			<Style.Triggers>
				<Trigger Property="IsSelected"
				         Value="True">
					<Setter Property="FontWeight"
					        Value="Bold" />
				</Trigger>
			</Style.Triggers>
		</Style>
        <Style x:Key="KeyValuePairStyle" TargetType="StackPanel">
            
        </Style>
        <DataTemplate x:Key="ScenarioNodeTooltipTemplate" DataType="{x:Type Mapping:ScenarioNode}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
            </Grid>
        </DataTemplate>

    </UserControl.Resources>
    <TreeView DockPanel.Dock="Top"
              Grid.IsSharedSizeScope="True"
 	          ItemsSource="{Binding TreeViewRootNodes}">
        <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type Mapping:TreeNode}"
                                  ItemsSource="{Binding Children}">
                <TextBlock Text="{Binding Name}" />
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type Mapping:ScenarioNode}"
                                  ItemsSource="{Binding Children}">
                <TextBlock Text="{Binding Name}">
                    <TextBlock.ToolTip>
                        <ToolTip DataContext="{Binding Path=DataContext.WrappedObject, RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ListView Grid.Column="0" HorizontalContentAlignment="Right" Margin="5">
                                    <ListViewItem Content="Range complex" />
                                    <ListViewItem Content="Description" />
                                    <ListViewItem Content="Time frame" />
                                    <ListViewItem Content="Start time" />
                                    <ListViewItem Content="Duration" />
                                    <ListViewItem Content="Created on" />
                                    <ListViewItem Content="Created by" />
                                    <ListViewItem Content="Builder version" />
                                </ListView>
                                <ListView Grid.Column="1" HorizontalContentAlignment="Left" Margin="0 5 5 5">
                                    <ListViewItem Content="{Binding SimAreaName}" />
                                    <ListViewItem Content="{Binding Description}" />
                                    <ListViewItem Content="{Binding TimeFrame}" />
                                    <ListViewItem Content="{Binding StartTime}" />
                                    <ListViewItem Content="{Binding Duration}" />
                                    <ListViewItem Content="{Binding CreationTime}" />
                                    <ListViewItem Content="{Binding AnalystName}" />
                                    <ListViewItem Content="{Binding BuilderVersion}" />
                                </ListView>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type Mapping:MapLayerViewModel}">
                <DockPanel LastChildFill="True">
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" SharedSizeGroup="LayerName" />
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <CheckBox Focusable="False"
				              Grid.Column="0"
				              IsChecked="{Binding IsChecked}"
				              VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Name, Mode=OneTime}"
                               x:Name="LayerName"
				               Grid.Column="1"/>
                        <Rectangle Width="12"
				               RadiusX="3"
				               RadiusY="3"
				               Grid.Column="2"
				               Height="12"
				               Fill="{Binding AreaColorBrush}"
				               Visibility="{Binding IsAreaColorVisible}"
				               VerticalAlignment="Center"
				               ToolTip="Area color: Right click to change"
				               Name="LineColor">
                            <Rectangle.ContextMenu>
                                <ContextMenu ItemContainerStyle="{StaticResource ContextMenuItemStyle}"
						             ItemsSource="{Binding AreaColorPickerMenu}" />
                            </Rectangle.ContextMenu>
                        </Rectangle>

                        <Rectangle Width="12"
				               RadiusX="3"
				               RadiusY="3"
				               Grid.Column="3"
				               Height="12"
				               Fill="{Binding LineColorBrush}"
				               Visibility="{Binding IsLineColorVisible}"
				               VerticalAlignment="Center"
				               ToolTip="{Binding PointLineTooltip}">
                            <Rectangle.ContextMenu>
                                <ContextMenu ItemContainerStyle="{StaticResource ContextMenuItemStyle}"
						             ItemsSource="{Binding LineOrPointPickerMenu}" />
                            </Rectangle.ContextMenu>
                        </Rectangle>

                        <Grid.ContextMenu>
                            <ContextMenu ItemContainerStyle="{StaticResource ContextMenuItemStyle}"
					             ItemsSource="{Binding ContextMenu}" />
                        </Grid.ContextMenu>
                    </Grid>
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsValid}" Value="False">
                        <DataTrigger.Setters>
                            <Setter TargetName="LayerName" Property="Foreground" Value="Red"/>
                            <Setter TargetName="LayerName" Property="ToolTip" Value="{Binding ValidationErrorText}" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </TreeView.Resources>
        <WPF:ViewPropertyBinding.ViewPropertyBindings>
            <WPF:ViewPropertyCollection>
                <WPF:ViewProperty Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=ActualWidth}"
                              Target="{Binding Path=TreeViewWidth, Mode=OneWayToSource}" />
            </WPF:ViewPropertyCollection>
        </WPF:ViewPropertyBinding.ViewPropertyBindings>
    </TreeView>
</UserControl>